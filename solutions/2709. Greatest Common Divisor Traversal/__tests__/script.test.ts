import {canTraverseAllPairs} from '../script'

describe('2709. Greatest Common Divisor Traversal', (): void => {

    it('Has path', (): void => {
        expect(canTraverseAllPairs([2, 3, 6]))
            .toBe(true)
    })

    it('Has path as well', (): void => {
        expect(canTraverseAllPairs([4, 3, 12, 8]))
            .toBe(true)
    })

    it('No path', (): void => {
        expect(canTraverseAllPairs([3, 9, 5]))
            .toBe(false)
    })

    it('Load test', (): void => {
        expect(canTraverseAllPairs([924, 420, 715, 154, 840, 420, 530, 679, 546, 858, 420, 990, 132, 720, 840, 845, 847, 546, 924, 546, 990, 847, 819, 462, 560, 118, 702, 390, 128, 910, 630, 140, 924, 945, 429, 840, 858, 660, 220, 429, 650, 910, 780, 304, 420, 546, 330, 490, 238, 315, 579, 546, 462, 165, 925, 942, 780, 686, 308, 210, 880, 405, 273, 429, 585, 780, 77, 195, 210, 858, 420, 840, 630, 924, 70, 882, 700, 330, 700, 924, 86, 420, 226, 858, 585, 182, 715, 840, 143, 210, 390, 633, 429, 616, 924, 891, 84, 770, 182, 540, 630, 871, 210, 744, 840, 975, 429, 770, 660, 525, 728, 630, 520, 210, 330, 780, 910, 378, 910, 546, 735, 528, 275, 770, 660, 187, 990, 780, 650, 455, 990, 468, 495, 715, 858, 560, 546, 330, 405, 770, 585, 312, 858, 858, 858, 770, 143, 728, 560, 308, 110, 156, 696, 210, 840, 495, 140, 286, 210, 546, 156, 462, 924, 462, 170, 550, 990, 429, 945, 924, 840, 630, 528, 390, 210, 286, 390, 585, 290, 403, 650, 270, 210, 602, 234, 770, 572, 308, 99, 429, 660, 880, 154, 546, 785, 770, 770, 300, 420, 468, 390, 231, 546, 385, 462, 585, 385, 110, 77, 660, 728, 660, 715, 462, 572, 396, 924, 276, 290, 840, 660, 429, 455, 20, 429, 858, 958, 945, 762, 630, 546, 385, 858, 630, 924, 770, 175, 858, 154, 780, 385, 924, 330, 840, 462, 945, 576, 546, 539, 572, 484, 286, 858, 308, 546, 539, 550, 770, 990, 242, 234, 660, 195, 702, 715, 143, 936, 525, 495, 630, 210, 315, 624, 720, 525, 910, 715, 546, 630, 462, 390, 143, 770, 770, 39, 990, 585, 910, 882, 572, 7, 924, 462, 154, 630, 546, 161, 286, 352, 572, 210, 924, 880, 630, 990, 156, 385, 195, 960, 92, 123, 990, 975, 165, 645, 330, 702, 924, 198, 231, 630, 924, 858, 810, 715, 783, 715, 770, 418, 40, 546, 735, 840, 130, 858, 165, 330, 588, 520, 165, 273, 420, 390, 858, 218, 630, 812, 715, 770, 318, 546, 650, 630, 660, 910, 105, 260, 70, 220, 154, 924, 234, 715, 525, 26, 210, 730, 825, 780, 770, 440, 390, 208, 924, 140, 770, 550, 624, 308, 462, 231, 210, 910, 546, 459, 462, 429, 462, 462, 715, 660, 44, 189, 910, 525, 78, 858, 630, 847, 819, 910, 770, 455, 924, 910, 416, 496, 550, 600, 840, 420, 660, 825, 910, 105, 429, 660, 154, 693, 26, 924, 588, 364, 726, 660, 364, 420]))
            .toBe(true)
    })
})
