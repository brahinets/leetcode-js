import {threeSumClosest} from '../script'

describe('16. 3Sum Closest', (): void => {
    it('All form closest', (): void => {
        expect(threeSumClosest([0, 0, 0], 1))
            .toBe(0)
    })

    it('All form exact', (): void => {
        expect(threeSumClosest([0, 0, 1], 1))
            .toBe(1)
    })

    it('Some form closest', (): void => {
        expect(threeSumClosest([-1, 2, 1, -4], 1))
            .toBe(2)
    })

    it('Some form exact', (): void => {
        expect(threeSumClosest([-1, 1, 1, -4], 1))
            .toBe(1)
    })

    it('Negative delta', (): void => {
        expect(threeSumClosest([1, 1, 1, 0], -100))
            .toBe(2)
    })

    it('Big variety', (): void => {
        expect(threeSumClosest([-232, -964, -313, 443, 673, 644, -185, 564, 416, -962, 243, -676, 944, -754, -530, -947, -298, 911, 356, -228, 553, 520, 482, -308, -621, -646, 147, 838, -403, -759, 786, 494, -214, -833, 341, 366, -435, 572, -283, 339, 88, -281, 523, 684, 636, -460, -717, -536, 261, 116, 204, 10, 11, -714, -640, -724, 358, 717, 541, 732, 574, 866, -89, 106, -534, 545, -750, -23, -70, -673, -791, 792, -375, 841, -102, -166, -940, -304, 560, -192, -655, -979, 73, 962, 948, 716, -974, 660, -123, -165, 803, -468, 137, 178, -52, 25, 336, -98, -823, 348, 860, 382, -479, 203, 138, 907, 503, 19, -238, 923, 528, -642, 37, -585, 906, -868, 774, 875, 406, 612, 872, -371, 933, 692, -77, 141, 898, -582, 633, 516, -361, -937, -155, -97, 916, -877, -423, 14, -915, -657, 108, 152, -993, -262, -322, -509, -381, 117, -535, -531, -61, 608, 447, -444, 453, 83, 272, 85, -524, -90, 655, 219, 142, -942, 47, 194, -114, 452, 347, 157, -473, -707, 940, 462, 375, 844, 515, -769, -896, 950, -485, 432, 322, -636, -703, 971, -507, 604, -741, -795, 807, 118, 566, 927, 63, -866, 59, 295, 947, 395, -139, -225, -33, 810, 215, 40, 675, 880, -312, -378, -591, -629, 672, 20, 23, 913, -137, -644, -901, 237, 770, 912, 857, 209, 989, 555, 621, 42, -499, -527, -286, -584, 959, -213, -418, -129, 309, 335, 695, -311, -669, 426, 730, -162, -606, 705, 292, 171, 240, 619, 978, -204, -922, 650, -268, -889, 52, -215, -913, -250, 429, -24, 193, 220, -176, 169, 914, 471, -936, -978, 708, 308, 694, 524, -740, -882, -132, -270, 747, 158, 473, -410, -952, 445, 58, -701, 172, -269, -786, -634, 55, -688, -848, 688, 764, 777, -686, -429, -339, 430, -574, 951, -544, 394, -807, 797, -520, 112, -259, -771, -628, 442, -117, 899, 647, -325, -514, 883, -396, -921, -446, 71, 289, 115, 965, -212, -110, -595, -852, 333, 530, -290, -76, 179, 294, 90, -824, -147, 490, -47, -854, -820, 413, -493, -872, 606, -194, 772, -465, 603, -880, -112, 956, -835, 377, 859, -222, 776, 749, -690, -529, 483, 62, 475, 398, -43, 981, -487, 707, 12, -122, 706, 547, 287, 195, -351, 986, -540, -650, -570, -980, -14, 320, -365, 804, -895, -116, -391], 3036))
            .toBe(2956)
    })
})
